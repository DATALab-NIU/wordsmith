#version: "3"
#
#services:
#  app:
#    build: .
#    ports:
#      - "8000:8000"
#    networks:
#      example-network:
#        ipv4_address: 127.0.0.1
#
#  prometheus:
#    image: prom/prometheus:latest
#    restart: unless-stopped
#    container_name: prometheus
#    ports:
#      - 9090:9090
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    networks:
#      example-network:
#        ipv4_address: 127.0.0.1
#
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    restart: unless-stopped
#    depends_on:
#      - prometheus
#    ports:
#      - 3000:3000
#    volumes:
#      - ./grafana/provisioning:/etc/grafana/provisioning
#    env_file:
#      - ./grafana/config.monitoring
#    networks:
#      example-network:
#        ipv4_address: 127.0.0.1
#
#  networks:
#    example-network:
#      name: example-network
#      driver: bridge
#      ipam:
#        driver: default
#        config:
#          - subnet: 127.0.0.1/24

version: '3'

services:

  fastapi:
    build: .
    ports:
      - "8000:8000"
    environment:
      - PROMETHEUS_MULTIPROC_DIR=/tmp

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

volumes:
  prometheus_data: {}
  grafana_data: {}